# NetCDF Diag Read Library
# Build configuration for nc_diag_res
# --------------------------------------------------------------------
# You should modify this file to set up the proper build configuration
# for nc_diag_res!
# --------------------------------------------------------------------
# Usage:
#     All you have to do is modify this file, and then build by using
#     "make"! You may add to this file, but NOT remove. Variables
#     that exist now should NOT be removed!
#     
#     Again, you may add your own variables to supplement the
#     build - but remember that we will be using our own NCDRES_*
#     varables to build, so make sure your variables make it into our
#     NCDRES_* variables!
#

# NCDRES_FORT90C - Fortran 90 compiler
#   Specify the Fortran 90 compiler to use to compile nc_diag_res.
NCDRES_FORT90C=ifort

# NCDRES_F90FLAGS - Fortran 90 compiler flags
#   Specify the Fortran 90 compiler flags to use to compile
#   nc_diag_res. Any flags can be specified here, including
#   optimization flags that you may use in your programs.
NCDRES_F90FLAGS+=

# NCDRES_CONFIG_FLAGS - nc_diag_res compile-time configuration flags
#   Specify nc_diag_res-specific options via compile-time flags.
#   
#   Available compile-time configuration flags:
#     -D_REAL8_          - define the default "real" number
#                          (other kinds defines available!)
#     -D_DEBUG_MEM_      - enable verbose memory debugging messages.
#                          WARNING - this is a LOT of messages!
#     -DANSI_TERM_COLORS - enable terminal colors for warning and error
#                          messages.
#     -DERROR_TRACEBACK  - enable a traceback on error. This is useful
#                          for debugging any issues with code or
#                          nc_diag_res. This works by triggering a
#                          divide-by-zero runtime error, which in turn
#                          generates a traceback.
NCDRES_CONFIG_FLAGS+=-D_REAL8_ -DANSI_TERM_COLORS -DERROR_TRACEBACK

# NCDRES_DEBUG - option to enable debugging flags when building
# nc_diag_res. This may override options set in NCDRES_F90FLAGS.
NCDRES_DEBUG=0

# NCDRES_MAKE_ENABLE_FANCY_ANSI - fun little tongue twister that enables
# (or disables) fancy, colorful printing for nc_diag_res building.
# 
# If you want to add it to other targets:
#    -> Make sure you are specifying the source file to be compiled first!
#    -> If you are compiling a single module (or file):
#           Add a $(NCDRES_MAKE_FANCY_BEGIN) to the start, and a
#           $(NCDRES_MAKE_FANCY_END) to the end of the compile block.
#    -> If you are compiling a big file (a library, or an executable)
#       that compiles with all of the .o files:
#           Add a $(NCDRES_MAKE_FANCY_BIG_BEGIN) to the start, and a
#           $(NCDRES_MAKE_FANCY_BIG_END) to the end of the compile block.
#       Note that if you are just linking to a library, you can use
#       the regular one instead.
# 
# If you really don't like this option, and want to remove it from the
# entire GNUmakefile system, do the following:
#    -> remove all $(NCDRES_MAKE_FANCY_BEGIN), $(NCDRES_MAKE_FANCY_END),
#       $(NCDRES_MAKE_FANCY_BIG_BEGIN), and
#       $(NCDRES_MAKE_FANCY_BIG_END) lines from ALL MAKEFILES
#    -> replace all $(NCDRES_MAKE_QUIET) with nothing, e.g. replace
#           $(NCDRES_MAKE_QUIET)somecmd
#               with
#           somecmd
#       ...from ALL MAKEFILES
#    -> remove the if block from this file (GNUmakefile.config):
#           ifeq ($(NCDRES_MAKE_ENABLE_FANCY_ANSI), 1)
#               ...
#           endif
#    -> remove this variable block from this file (GNUmakefile.config)
NCDRES_MAKE_ENABLE_FANCY_ANSI=0

#######################################################################
# Don't change anything below!
#######################################################################
# Fancy ANSI GNUmakefile... oooh, fancy
ifeq ($(NCDRES_MAKE_ENABLE_FANCY_ANSI), 1)
    NCDRES_MAKE_FANCY_BEGIN = @printf "\033[1m\033[34m ** Building $< => $@...\033[0m\n"
    NCDRES_MAKE_QUIET = @
    NCDRES_MAKE_FANCY_END = @printf "\033[F\r\033[32m ** Building $< => $@... done!\033[0m\n"
    
    NCDRES_MAKE_FANCY_BIG_BEGIN = @printf "\033[1m\033[34m ** Building $@...\033[0m\n"
    NCDRES_MAKE_FANCY_BIG_END = @printf "\033[F\r\033[32m ** Building $@... done!\033[0m\n"
else
    NCDRES_MAKE_FANCY_BEGIN = 
    NCDRES_MAKE_QUIET = 
    NCDRES_MAKE_FANCY_END = 
    NCDRES_MAKE_FANCY_BIG_BEGIN = 
    NCDRES_MAKE_FANCY_BIG_END = 
endif

# Add debug flags
ifeq ($(NCDRES_DEBUG), 1)
    NCDRES_F90FLAGS+=-O0 -fpp -g -pg -check all \
        -ftrapuv -debug all -fpe0 -warn all -traceback -debug extended
endif
